* openstack

=====================================================
  vi /etc/sysconfig/selinux
SELINUX=disabled


  systemctl disable firewalld
  systemctl stop firewalld
  systemctl disable NetworkManager
  systemctl stop NetworkManager
  systemctl enable network
  systemctl start network

  vi /etc/hosts
# openstack
192.168.239.139 openstack

  yum install -y centos-release-openstack-stein
  yum install -y openstack-packstack


-- Centos의 6 코어 설정 자동화
 packstack --gen-answer-file  /root/answers.txt

 vi /root/answers.txt
CONFIG_DEFAULT_PASSWORD=mode1752
CONFIG_CEILOMETER_INSTALL=n
CONFIG_AODH_INSTALL=n
CONFIG_NTP_SERVERS=kr.pool.ntp.org
CONFIG_CONTROLLER_HOST=192.168.68.X
CONFIG_COMPUTE_HOSTS=192.168.68.X
CONFIG_NETWORK_HOSTS=192.168.68.X
CONFIG_KEYSTONE_ADMIN_PW=mode1752
CONFIG_NEUTRON_ML2_TYPE_DRIVERS=flat,vxlan
CONFIG_NEUTRON_ML2_TENANT_NETWORK_TYPES=vxlan
CONFIG_NEUTRON_ML2_MECHANISM_DRIVERS=	openvswitch
CONFIG_NEUTRON_L2_AGENT=openvswitch
CONFIG_NEUTRON_OVS_BRIDGE_MAPPINGS=extnet:br-ex
CONFIG_NEUTRON_OVS_BRIDGE_IFACES=br-ex:eth0
CONFIG_PROVISION_DEMO=n
CONFIG_LBAAS_INSTALL=y
CONFIG_HEAT_INSTALL=y

- 반드시 필히 꼭 제발 기필코 부디 팩스텍 엔서파일 실행은 ssh가 아닌 KVM 진짜 터미널에서 실행해 주세요.
- 뉴트론(network.pp) 설치 장면에서 ssh 끊길 수 있음. 그러면 어디까지 설치되었는지 알 수 없어요.

 packstack  --answer-file  /root/answers.txt

- 설치 시작 시간과 끝난 시간을 기록하는 습관을 들여주세요. VM 용량 설계에 도움이 될 수 있어요.


- CentOS7 DVD iso 파일로 Centos7 설치
- vCpu 4개, RAM 4GB(4096MB), 100GB 사양의 CentOS7 VM을 생성
- virt-manager를 사용하기 위하여 Server with GUI (GUI 환경)로 설치
- KVM host 1은 192.168.88.152로 KVM host 1은 192.168.88.153으로 설정


*KVM 설치

- NetworkManager 서비스 중지
 systemctl stop NetworkManager
 systemctl disable NetworkManager

-방화벽 서비스 중지
 systemctl stop firewalld
 systemctl disable firewalld
 iptables -L

- 네트워크 NIC 설정 및 활성화
 vi /etc/sysconfig/network-scripts/ifcfg-ens33
192.168.239.135/
--------------------------------------------------
TYPE=Ethernet
BOOTPROTO=static
DEVICE=ens33
NAME=ens33
IPADDR=192.168.88.152 -> 192.168.61.152 (자기 네트워크에 맞게)
NETMASK=255.255.255.0
GATEWAY=192.168.88.1  -> 192.168.61.2 (자기 네트워크에 맞게)
ONBOOT=yes
DNS1= 8.8.8.8
---------------------------------------------------
- 저장후 네트워크 재시작
 systemctl restart network

- Selinux 설정 비활성화
 vi /etc/selinux/config
SELINUX=disabled
-재부팅해야 설정 적용
 reboot

- CPU 가상화 지원 확인
grep --color -Ew "svm|vmx|lm" /proc/cpuinfo

-yum 레퍼지토리 업데이트
 yum update -y

 yum groupinfo "Virtualization Host" -y

- 하이퍼바이저 관리 도구 설치
 yum install virt-manager openssh-askpass virt-install virt-viewer virt-top -y

 systemctl start libvirtd
 systemctl enable libvirtd

------
- virt-host-validate : 하이퍼 바이저 시스템 가용성 확인 명령

 virt-host-validate
------------------------------------------------------------------------------------------------------
 QEMU: Checking for hardware virtualization                                 : PASS
 QEMU: Checking if device /dev/kvm exists                                   : PASS
 QEMU: Checking if device /dev/kvm is accessible                            : PASS
 QEMU: Checking if device /dev/vhost-net exists                             : PASS
 QEMU: Checking if device /dev/net/tun exists                               : PASS
 … 중략 
-------------------------------------------------------------------------------------

- virsh nodeinfo : 시스템 물리 자원 정보 확인 명령
 virsh nodeinfo
-------------------------------------------------------
 CPU model:           x86_64
 CPU(s):              4 CPU
 frequency:       3707 MHz 
 CPU socket(s):       4 
 Core(s) per socket:  1
 Thread(s) per core:  1 NUMA cell(s):        1
 Memory size:         8388020 KiB
-------------------------------------------------------

- Nested KVM 설정
 vi /etc/modprobe.d/kvm.conf
---------------------------------------------------
options kvm_intel nested=1
options kvm_amd netsted=1
---------------------------------------------------

 lsmod | grep kvm_intel
 modprobe kvm_intel

- Nested KVM verify
 cat /sys/module/kvm_intel/parameters/nested

* VM 생성
- Centos7 iso 파일 다운로드
 cd /var/lib/libvirt/images
 wget http://192.168.10.49/ISO/CentOS-7-x86_64-Minimal.iso

--- ## How to share folder of Windows host to CentOS Stream 8 Guest OS on Vmware Workstation 16.2
- wmware setting
	- Settings > Options > Shared Folders > Always enabled 
- CentOS setting
	- vmware-hgfsclient 
	- df -kh
	- ls /mnt/hgfs -al
	- gedit /etc/fstab
	  vmhgfs-fuse    /mnt/hgfs   fuse  defaults,allow_other 0 0
	- mount -a 
---
cd /mnt/hgfs
[root@localhost 2023교육]# cp CentOS-7-x86_64-Minimal.iso /var/lib/libvirt/images
자료1
---- CentOS7 설치
vCpu 1개, RAM 1GB(1024MB), 10GB, 네트워크는 NAT 사양의 CentOS7 VM을 생성

-- virt-install 방식
qemu-img create -f raw -o size=10G /var/lib/libvirt/qemu/CentOS7.img
virt-install \
	--name CentOS7-min \
	--ram 1024 \
	--disk path=/var/lib/libvirt/qemu/CentOS7.img \
	--vcpus 1 \
	--os-type Linux \
	--os-variant CentOS7 \
	--network bridge=virbr0 \
	--cdrom /CentOS-7-x86_64-Minimal.iso
	--graphics vnc,port=5999 \
	--console pty,target_type=serial \







-- virt-builder 방식
- Libguestfs-tools 패키지 설치
	yum install libguestfs-tools -y
	yum install libguestfs-xfs -y
- OS 템플릿 다운로드 및 가상디스크 생성
	cd /var/lib/libvirt/images; /usr/bin/virt-builder centos-7.3 --format raw -size 20G --root-password password:123456
- Virt-install 명령으로 VM 설치
	virt-install --name centos7.3 --ram 1024 --vcpus=1 --network network=default --disk path=/var/lib/libvirt/images/centos-7.3.img --import
	
cd /var/lib/libvirt/images; /usr/bin/virt-builder centos-7.3 --format raw
--size 10G --root-password password:123456

-----
* 네트워크 생성
- isolated 네트워크 생성 : 192.168.102.0/24, DHCP 범위는 192.168.102.128 - 192.168.102.254로 설정 --> Isolated virtual network 선택

- Routed 네트워크 생성 : 192.168.6.0/24,  DHCP 범위는 192.168.6.128 - 192.168.6.254로 설정 --> Forwarding to physical network 선택 --> Destination은 physical device em1 선택 --> mode는 Routed 선택

- NAT 네트워크 생성 : 192.168.7.0/24,  DHCP 범위는 192.168.7.128 - 192.168.7.254로 설정  --> Forwarding to physical network 선택 --> Destination은 Any physical device 선택 --> mode는 NAT 선택

--------------
* Storage 연결
이미지 파일 생성  dd if=/dev/zero of=/vms/dbvm_disk2.img bs=1G count=5

생성한 가상 디스크 이미지 파일 연결 virsh attach-disk centos7.0-3  /vms/dbvm_disk2.img vdb --live --config

VM에 연결된 가상 디스크 정보 확인   virsh domblklist centos7.0-3 --details 

vdb 볼륨을 먼저 분리(detach)    virsh detach-disk centos7.0-3 vdb --config

VM에 연결된 가상 디스크 정보 확인   virsh domblklist centos7.0-3 --details

Virsh 통한 스토리지 정보         virsh pool-list

-*디렉토리 타입 스토리지 생성   
/etc/libvirt/storage/에 스토리지 풀 xml 파일 생성
virsh pool-define-as dedicated_storage dir --target /vms

스토리지 풀 디렉토리 생성 virsh pool-build dedicated_storage

스토리지 풀 시작 virsh pool-start dedicated_storage, virsh pool-list --all

-* lvm
스토리지 풀 정의     virsh pool-define-as lvmpool logical - - /dev/sdb libert_lvm /dev/libert_lvm

virsh pool-autostart lvmpool
virsh pool-list lvmpool
virsh pool-autostart lvmpool

포멧		
blkid /dev/libert_lvm/lvmpool_1
mkfs.ext4 /dev/libert_lvm/lvmpool_1
mount /dev/libert_lvm/lvmpool_1 /mnt

-* 스토리지 볼륨 관리
스토리지 볼륨 생성하기 	virsh vol-create-as dedicated_storage vm_vol1 1G

스토리지 볼륨 정보 확인 	virsh vol-info --pool dedicated_storage vm_vol1
스토리지 볼륨 삭제 		virsh vol-delete vm_vol1 dedicated_storage


-* VM lifecycle 상태 관리
Virsh 명령어 를 이용한 VM 상태 확인 virsh list --all

VM 설정 백업 virsh dumpxml centos7.0-3 > /root/centos7.0-3.xml

VM 정의 삭제 (VM 디스크 이미지는 삭제 되지 않음)  virsh undefine centos7.0-3, virsh list --all

VM 설정 백업 파일로 복원 (libvirt 에 VM이 정의 되어 있지 않은 상태) virsh create centos7.0-3.xml, virsh list

VM 상태 저장 (VM 이 Running 중일때 상태 저장) virsh save centos7.0-3 /root/centos7.0-3_before_host_reboot

VM 상태 복원 virsh restore /root/centos7.0-3_before_host_reboot

VM 관리용 상태저장 virsh managedsave centos7.0-3

VM 중지 (libvirt에 VM이 정의되지 않은 상태) virsh destroy centos7.0-3, virsh list --all

Libvirt에 VM 정의 virsh define centos7.0-3.xml --validate, virsh list --all


---------------------------------------------------------
* Kimchi 설치
- kimchi 다운로드 및 설치
 yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
 yum -y update
EPEL (Extra Packages for Enterprise Linux) 은 Fedora Project 에서 제공되는 저장소로 각종 패키지의 최신 버전을 제공하는 community 기반의 저장소이다. 

 yum install https://github.com/kimchi-project/kimchi/releases/download/2.5.0/wok-2.5.0-0.el7.centos.noarch.rpm

 yum install https://github.com/kimchi-project/kimchi/releases/download/2.5.0/kimchi-2.5.0-0.el7.centos.noarch.rpm


-  Kimchi 데몬 시작 및 시작프로그램에 추가
 systemctl start wokd
 systemctl enable wokd

- firefox에서 https://localhost:8001 로 접속하여 실행확인

https://atl.kr/dokuwiki/doku.php/kvm_-_wok_kimchi_manager

systemctl disable NetworkManager
systemctl disable firewalld

yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
yum -y update
reboot

 yum install https://github.com/kimchi-project/kimchi/releases/download/2.5.0/wok-2.5.0-0.el7.centos.noarch.rpm
 yum install https://github.com/kimchi-project/kimchi/releases/download/2.5.0/kimchi-2.5.0-0.el7.centos.noarch.rpm

 systemctl enable wokd
 systemctl start wokd


============================================================
vbox

https://technote.kr/213

pnf vnf
https://www.netmanias.com/ko/post/blog/14631/5g-sdn-nfv/evolution-to-5g-cloud-native-1

===================================================================

KVM 명령어

grep --color -Ew ‘svm|vmx|lm’ /proc/cpuinfo
lsmod | grep kvm
lscpu
virt-host-validate
virsh nodeinfo
virsh domcapabilities
lsmod | grep bridge
brctl addbr teste
brctl show
ifconfig tester

sudo yum install kubernetes-client -y
curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
sudo install minikube-linux-amd64 /usr/local/bin/minikube
minikube start --vm-driver=kvm2
kubectl version
